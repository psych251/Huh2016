target = "3")
mean(d_tidy_sim$mean_sim)
sd(d_tidy_sim$mean_sim)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
# calculating mean & sd
mean(d_tidy_sim$mean_sim)
sd(d_tidy_sim$mean_sim)
mean(d_tidy_sim$mean_sim)
sd(d_tidy_sim$mean_sim)
d_tidy <- full_join(d_tidy_sim, d_tidy_choice, (by = NULL), copy = "FALSE")
# cleaning the data - need help on this. Something went wrong here, as I now have 10,000 rows of data. How do I gather multiple columns together without creating more rows (i.e. merge data based on one identifying variable like "set"?
d_tidy <- d %>%
select(id, starts_with("sub"), starts_with("pref"), starts_with("sim")) %>%
gather(set, choice, starts_with("sub")) %>%
gather(sim_set, sim, starts_with("sim")) %>%
gather(pref, pref_rating, starts_with("pref")) %>%
separate(pref, c("pref_set", "item"), "_") %>%
spread(item, pref_rating) %>%
rename(within = "1",
cross = "2",
target = "3")
# gathering data. 0 = cross category, 1 = within category
d_tidy_choice <- d %>%
select(id, starts_with("sub")) %>%
gather(set, choice, starts_with("sub"))
# cleaning the data
d_tidy_choice$set <- gsub("sub", "", d_tidy_choice$set)
d_tidy_choice$choice <- gsub("cross category", "0", d_tidy_choice$choice)
d_tidy_choice$choice <- gsub("within category", "1", d_tidy_choice$choice)
d_tidy_choice$choice <- as.factor(d_tidy_choice$choice)
d_tidy_choice$set <- as.numeric(d_tidy_choice$set)
d_tidy_choice$set <- as.factor(d_tidy_choice$set)
d_tidy_choice$id <- as.numeric(d_tidy_choice$id)
d_tidy_choice$id <- as.factor(d_tidy_choice$id)
# calculate proportions chose within-category vs. cross-category & test against 50%
table(d_tidy_choice$choice)
binom.test(60, 100, 0.5, alternative="greater")
# gathering and spreading
d_tidy_pref <- d %>%
select(id, starts_with("pref")) %>%
gather(pref, pref_rating, starts_with("pref")) %>%
separate(pref, c("set", "item"), "_") %>%
spread(item, pref_rating) %>%
rename(within = "w",
cross = "c",
target = "t")
# cleaning the data
d_tidy_pref$set <- gsub("pref", "", d_tidy_pref$set)
d_tidy_pref$set <- as.numeric(d_tidy_pref$set)
d_tidy_pref$set <- as.factor(d_tidy_pref$set)
d_tidy_pref$id <- as.numeric(d_tidy_pref$id)
d_tidy_pref$id <- as.factor(d_tidy_pref$id)
# calculating means & sd
mean(d_tidy_pref$within, na.rm=TRUE)
mean(d_tidy_pref$cross, na.rm=TRUE)
mean(d_tidy_pref$target, na.rm=TRUE)
sd(d_tidy_pref$within)
sd(d_tidy_pref$cross)
sd(d_tidy_pref$target, na.rm=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$cross, paired=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$within, paired=TRUE)
t.test(d_tidy_pref$cross, d_tidy_pref$within, paired=TRUE)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
# calculating mean & sd
mean(d_tidy_sim$mean_sim)
sd(d_tidy_sim$mean_sim)
mean(d_tidy_sim$mean_sim)
sd(d_tidy_sim$mean_sim)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$id <- as.numeric(d_tidy_sim_mean$id)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim$mean_sim <- as.numeric(d_tidy_sim$mean_sim)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim$mean_sim)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
d_tidy_sim$mean_sim <- as.factor(d_tidy_sim_mean$mean_sim)
# calculating mean & sd
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
View(d_tidy_sim_mean)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
d_tidy_sim_mean$mean_sim <- as.factor(d_tidy_sim_mean$mean_sim)
# calculating mean & s
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
d_tidy_sim_mean$mean_sim <- as.factor(d_tidy_sim_mean$mean_sim)
# calculating mean & s
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
d <- d %>%
select((starts_with("sub")), (starts_with("pref")), (starts_with("sim")), "Male", "Age", "Platform")
d$sub1 <- as.factor(d$sub1)
d$sub2 <- as.factor(d$sub2)
d$sub3 <- as.factor(d$sub3)
d$sub4 <- as.factor(d$sub4)
d$sub5 <- as.factor(d$sub5)
d$sub6 <- as.factor(d$sub6)
d$sub7 <- as.factor(d$sub7)
d$sub8 <- as.factor(d$sub8)
d$sub9 <- as.factor(d$sub9)
d$sub10 <- as.factor(d$sub10)
d$sub1 <- factor(d$sub1, labels = c("cross category", "within category"))
d$sub2 <- factor(d$sub2, labels = c("cross category", "within category"))
d$sub3 <- factor(d$sub3, labels = c("cross category", "within category"))
d$sub4 <- factor(d$sub4, labels = c("cross category", "within category"))
d$sub5 <- factor(d$sub5, labels = c("cross category", "within category"))
d$sub6 <- factor(d$sub6, labels = c("cross category", "within category"))
d$sub7 <- factor(d$sub7, labels = c("cross category", "within category"))
d$sub8 <- factor(d$sub8, labels = c("cross category", "within category"))
d$sub9 <- factor(d$sub9, labels = c("cross category", "within category"))
d$sub10 <- factor(d$sub10, labels = c("cross category", "within category"))
id <- rownames(d)
d <- cbind(id=id, d)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
d_tidy_sim_mean$mean_sim <- as.factor(d_tidy_sim_mean$mean_sim)
# calculating mean & s
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
d_tidy_sim_mean$mean_sim <- as.factor(d_tidy_sim_mean$mean_sim)
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
# calculating mean & s
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
# t tests for each set of stimuli in wide form
t.test(d$sim1, mu=4)
t.test(d$sim2, mu=4)
t.test(d$sim3, mu=4)
t.test(d$sim4, mu=4)
t.test(d$sim5, mu=4)
t.test(d$sim6, mu=4)
t.test(d$sim7, mu=4)
t.test(d$sim8, mu=4)
t.test(d$sim9, mu=4)
t.test(d$sim10, mu=4)
# convert to tidy data to calculate overall mean & sd
d_tidy_sim <- d %>%
select(id, starts_with("sim")) %>%
gather(set, sim, starts_with("sim"))
# cleaning the data
d_tidy_sim$set <- gsub("sim", "", d_tidy_sim$set)
d_tidy_sim$id <- as.numeric(d_tidy_sim$id)
d_tidy_sim$id <- as.factor(d_tidy_sim$id)
d_tidy_sim_mean <- d_tidy_sim %>%
group_by(set) %>%
summarise(mean_sim = mean(sim, na.rm = TRUE))
d_tidy_sim_mean$mean_sim <- as.numeric(d_tidy_sim_mean$mean_sim)
# calculating mean & s
mean(d_tidy_sim_mean$mean_sim)
sd(d_tidy_sim_mean$mean_sim)
# gathering and spreading
d_tidy_pref <- d %>%
select(id, starts_with("pref")) %>%
gather(pref, pref_rating, starts_with("pref")) %>%
separate(pref, c("set", "item"), "_") %>%
spread(item, pref_rating) %>%
rename(within = "w",
cross = "c",
target = "t")
# cleaning the data
d_tidy_pref$set <- gsub("pref", "", d_tidy_pref$set)
d_tidy_pref$set <- as.numeric(d_tidy_pref$set)
d_tidy_pref$set <- as.factor(d_tidy_pref$set)
d_tidy_pref$id <- as.numeric(d_tidy_pref$id)
d_tidy_pref$id <- as.factor(d_tidy_pref$id)
# calculating means & sd
mean(d_tidy_pref$within, na.rm=TRUE)
mean(d_tidy_pref$cross, na.rm=TRUE)
mean(d_tidy_pref$target, na.rm=TRUE)
sd(d_tidy_pref$within)
sd(d_tidy_pref$cross)
sd(d_tidy_pref$target, na.rm=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$cross, paired=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$within, paired=TRUE)
t.test(d_tidy_pref$cross, d_tidy_pref$within, paired=TRUE)
d_tidy_sim_mean
# gathering and spreading
d_tidy_pref <- d %>%
select(id, starts_with("pref")) %>%
gather(pref, pref_rating, starts_with("pref")) %>%
separate(pref, c("set", "item"), "_") %>%
spread(item, pref_rating) %>%
rename(within = "w",
cross = "c",
target = "t")
# cleaning the data
d_tidy_pref$set <- gsub("pref", "", d_tidy_pref$set)
d_tidy_pref$set <- as.numeric(d_tidy_pref$set)
d_tidy_pref$set <- as.factor(d_tidy_pref$set)
d_tidy_pref$id <- as.numeric(d_tidy_pref$id)
d_tidy_pref$id <- as.factor(d_tidy_pref$id)
# calculating means & sd
mean(d_tidy_pref$within, na.rm=TRUE)
mean(d_tidy_pref$cross, na.rm=TRUE)
mean(d_tidy_pref$target, na.rm=TRUE)
sd(d_tidy_pref$within)
sd(d_tidy_pref$cross)
sd(d_tidy_pref$target, na.rm=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$cross, paired=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$within, paired=TRUE)
t.test(d_tidy_pref$cross, d_tidy_pref$within, paired=TRUE)
mean(d_tidy_pref$within, na.rm=TRUE)
mean(d_tidy_pref$cross, na.rm=TRUE)
mean(d_tidy_pref$target, na.rm=TRUE)
sd(d_tidy_pref$within, na.rm=TRUE)
sd(d_tidy_pref$cross, na.rm=TRUE)
sd(d_tidy_pref$target, na.rm=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$cross, paired=TRUE)
t.test(d_tidy_pref$target, d_tidy_pref$within, paired=TRUE)
t.test(d_tidy_pref$cross, d_tidy_pref$within, paired=TRUE)
# gathering data. 0 = cross category, 1 = within category
d_tidy_choice <- d %>%
select(id, starts_with("sub")) %>%
gather(set, choice, starts_with("sub"))
# cleaning the data
d_tidy_choice$set <- gsub("sub", "", d_tidy_choice$set)
d_tidy_choice$choice <- gsub("cross category", "0", d_tidy_choice$choice)
d_tidy_choice$choice <- gsub("within category", "1", d_tidy_choice$choice)
d_tidy_choice$choice <- as.factor(d_tidy_choice$choice)
d_tidy_choice$set <- as.numeric(d_tidy_choice$set)
d_tidy_choice$set <- as.factor(d_tidy_choice$set)
d_tidy_choice$id <- as.numeric(d_tidy_choice$id)
d_tidy_choice$id <- as.factor(d_tidy_choice$id)
# calculate proportions chose within-category vs. cross-category & test against 50%
table(d_tidy_choice$choice)
binom.test(60, 100, 0.5, alternative="greater")
table(d_tidy_choice$choice)
binom.test(205, 805, 0.5, alternative="greater")
# gathering data. 0 = cross category, 1 = within category
d_tidy_choice <- d %>%
select(id, starts_with("sub")) %>%
gather(set, choice, starts_with("sub"))
# cleaning the data
d_tidy_choice$set <- gsub("sub", "", d_tidy_choice$set)
d_tidy_choice$choice <- gsub("cross category", "0", d_tidy_choice$choice)
d_tidy_choice$choice <- gsub("within category", "1", d_tidy_choice$choice)
d_tidy_choice$choice <- as.factor(d_tidy_choice$choice)
d_tidy_choice$set <- as.numeric(d_tidy_choice$set)
d_tidy_choice$set <- as.factor(d_tidy_choice$set)
d_tidy_choice$id <- as.numeric(d_tidy_choice$id)
d_tidy_choice$id <- as.factor(d_tidy_choice$id)
# calculate proportions chose within-category vs. cross-category & test against 50%
table(d_tidy_choice$choice)
binom.test(20.3, 70.7, 0.5, alternative="greater")
# gathering data. 0 = cross category, 1 = within category
d_tidy_choice <- d %>%
select(id, starts_with("sub")) %>%
gather(set, choice, starts_with("sub"))
# cleaning the data
d_tidy_choice$set <- gsub("sub", "", d_tidy_choice$set)
d_tidy_choice$choice <- gsub("cross category", "0", d_tidy_choice$choice)
d_tidy_choice$choice <- gsub("within category", "1", d_tidy_choice$choice)
d_tidy_choice$choice <- as.factor(d_tidy_choice$choice)
d_tidy_choice$set <- as.numeric(d_tidy_choice$set)
d_tidy_choice$set <- as.factor(d_tidy_choice$set)
d_tidy_choice$id <- as.numeric(d_tidy_choice$id)
d_tidy_choice$id <- as.factor(d_tidy_choice$id)
# calculate proportions chose within-category vs. cross-category & test against 50%
table(d_tidy_choice$choice)
binom.test(29, 71, 0.5, alternative="greater")
table(d_tidy_choice$choice)
table(d_tidy_choice$choice)
table(d_tidy_choice$choice)
binom.test(805, 1010, 0.5, alternative="greater")
d_tidy <- full_join(d_tidy_sim, d_tidy_choice, (by = NULL), copy = "FALSE")
d_tidy <- full_join(d_tidy, d_tidy_pref, (by = NULL), copy = "FALSE")
# regression of similarity and enjoyment ratings on item choice with participants as random effects
choice_model <- glmer(d_tidy$choice ~ d_tidy$sim + d_tidy$within + d_tidy$cross + (1|d_tidy$id),
family = binomial)
summary(choice_model)
